set(CMAKE_D_DASH_O "-of")
set(CMAKE_BASE_NAME ldc)

set(CMAKE_STATIC_LIBRARY_CREATE_D_FLAGS "-lib")

set(CMAKE_SHARED_LIBRARY_D_FLAGS "") # -pic
set(CMAKE_SHARED_LIBRARY_CREATE_D_FLAGS "-shared") # -shared
set(CMAKE_SHARED_LIBRARY_LINK_D_FLAGS "") # +s, flag for exe link to use shared lib
set(CMAKE_SHARED_LIBRARY_SONAME_D_FLAG "-soname=")
set(CMAKE_SHARED_LIBRARY_RUNTIME_D_FLAG "") # -rpath
set(CMAKE_SHARED_LIBRARY_RUNTIME_D_FLAG_SEP "") # : or empty
set(CMAKE_INCLUDE_FLAG_D "-I") # -I
set(CMAKE_INCLUDE_FLAG_D_SEP "") # , or empty
set(CMAKE_LIBRARY_PATH_FLAG "-L-L")
set(CMAKE_LIBRARY_PATH_TERMINATOR "") # for the Digital Mars D compiler the link paths have to be terminated with a "/"
set(CMAKE_LINK_LIBRARY_FLAG "-L-l")

set(CMAKE_LINK_LIBRARY_SUFFIX "")
set(CMAKE_STATIC_LIBRARY_PREFIX "lib")
set(CMAKE_STATIC_LIBRARY_SUFFIX ".a")
set(CMAKE_SHARED_LIBRARY_PREFIX "lib") # lib
set(CMAKE_SHARED_LIBRARY_SUFFIX ".so") # .so
set(CMAKE_EXECUTABLE_SUFFIX "") # .exe

set(CMAKE_FIND_LIBRARY_PREFIXES "lib")
set(CMAKE_FIND_LIBRARY_SUFFIXES ".so" ".a")

set(CMAKE_D_FLAGS_INIT "")
set(CMAKE_D_LINK_FLAGS "")
set(CMAKE_D_FLAGS_DEBUG_INIT "-gc -d-debug -L--export-dynamic")
set(CMAKE_D_FLAGS_MINSIZEREL_INIT "-Oz")
set(CMAKE_D_FLAGS_RELEASE_INIT "-O -release -inline")
set(CMAKE_D_FLAGS_RELWITHDEBINFO_INIT "-O -op -gc -L--export-dynamic")
#set(CMAKE_D_CREATE_PREPROCESSED_SOURCE "<CMAKE_D_COMPILER> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>")
set(CMAKE_D_CREATE_ASSEMBLY_SOURCE "<CMAKE_D_COMPILER> <FLAGS> -S <SOURCE> -of<ASSEMBLY_SOURCE>")
#set(CMAKE_INCLUDE_SYSTEM_FLAG_D "-isystem ")
set(CMAKE_DEPFILE_FLAGS_D "-deps=<DEPFILE>")
set(CMAKE_NINJA_DEPTYPE_D "dmd")
set(CMAKE_D_COMPILE_OPTIONS_PIC "-fPIC")
